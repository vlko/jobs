@model vlko.BlogModule.Action.CRUDModel.CommentCRUDModel
@using vlko.web.Controllers;
@using vlko.web.ViewModel.Page;
@{
	Html.ScriptInclude("~/Scripts/jquery.validate.js");
	Html.ScriptInclude("~/Scripts/jquery.validate.unobtrusive.js");
}
	
@using (Html.BeginRouteForm("PageComment",
		new RouteValueDictionary(new
									{
										friendlyUrl = Html.ViewContext.RouteData.GetRequiredString("friendlyUrl"),
										sort = Html.ViewContext.RouteData.GetRequiredString("sort")
									})
									, cssClass: "cleaner"))
{
	<fieldset>
		<legend>Add comment</legend>

		@Html.Hidden("Page", Html.ViewContext.RequestContext.HttpContext.Request.QueryString["Page"])
		@Html.HiddenFor(model => model.ContentId)
		@Html.HiddenFor(model => model.ParentId) 
		@if (Model.ChangeUser == null) {  
			<div class="editor-label">Anonymous name</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.AnonymousName, cssClass: "text-box single-line", maxLength: Html.MaxLength(model => model.AnonymousName))
				@Html.ValidationMessageFor(model => model.AnonymousName)
			</div>
		}     	     
		else { 
			<div class="editor-label">User</div>
			<div class="editor-field">@Model.ChangeUser.Name</div>
		} 
		<div class="editor-label">Title</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.Name, cssClass: "text-box single-line", maxLength: Html.MaxLength(model => model.Name))
			@Html.ValidationMessageFor(model => model.Name)
		</div>
		@if (Model.ChangeUser == null) {  
			<div class="editor-label">@Model.ExpressionText</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.RoboCheck, cssClass: "text-box single-line")
				@Html.ValidationMessageFor(model => model.RoboCheck)
			</div>
		}
		<div class="editor-label">Text</div>
		<div class="editor-field">
			@Html.TextAreaFor(model => model.Text, cssClass: "text-box multi-line")
			@{if (Model.ChangeUser != null) {

				 Html.ScriptInclude("~/Scripts/ckeditor/ck_mvc_integration.js");
				 Html.ScriptInclude("~/Scripts/ckeditor/ckeditor.js");
				 Html.ScriptInclude("~/Scripts/ckeditor/adapters/jquery.js");
				 Html.ScriptInclude("~/Scripts/ckeditor/jquery.ui.dialog-patch.js");

				 Html.ScriptInlineInclude(
				 @<script type="text/javascript">
				  	$(function () {
				  		var editorId = "@item.Html.NameFor(model => model.Text)";
				  		if (CKEDITOR.instances[editorId]) {
				  			CKEDITOR.remove(CKEDITOR.instances[editorId]);
				  		}
				  		$("#" + editorId).ckeditor();
					});
					</script>);
			 }
			}
			@Html.ValidationMessageFor(model => model.Text)
		</div>          
		<div class="editor-submit"><input type="submit" value="Add" /></div>
	</fieldset>
}


